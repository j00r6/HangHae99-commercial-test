name: CI/CD using Docker & Github Actions

# 1. main 브랜치에 push 또는 PR 작업이 이루어질 경우 액션 실행
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# 2. 자바 설정
jobs:
  CI-CD:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      
      # MySQL DB 설정파일 application-prod.yml 작성
      - name: Make application-prod.yml
        env:
          MYSQL_URL: ${{ secrets.MYSQL_URL }}
          MYSQL_USERNAME: ${{ secrets.MYSQL_USERNAME }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        run: |
          cd ./src/main/resources
          touch ./application-prod.yml
          echo "${{ secrets.YML }}" > ./application-prod.yml
        shell: bash

      
      # 3. gradle build로 빌드파일 생성
      - name: Build with Gradle
        run: ./gradlew build -x test

      # 4. docker 작업 수행
      - name: Build and push Docker image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_IMAGENAME: ${{ secrets.DOCKER_IMAGENAME }}
          MYSQL_URL: ${{ secrets.MYSQL_URL }}
          MYSQL_USERNAME: ${{ secrets.MYSQL_USERNAME }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        run: |
          run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker-compose -f docker-compose.yml build
          docker-compose -f docker-compose.yml push
